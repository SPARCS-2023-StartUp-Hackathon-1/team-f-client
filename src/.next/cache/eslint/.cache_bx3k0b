[{"/Users/chaerimkim/team-f-client/src/apis/index.ts":"1","/Users/chaerimkim/team-f-client/src/components/GlobalErrorFallback.tsx":"2","/Users/chaerimkim/team-f-client/src/components/QueryClientProvider.tsx":"3","/Users/chaerimkim/team-f-client/src/components/QueryErrorBoundary.tsx":"4","/Users/chaerimkim/team-f-client/src/components/RecoilDebugObserver.tsx":"5","/Users/chaerimkim/team-f-client/src/components/common/AIBubble/index.tsx":"6","/Users/chaerimkim/team-f-client/src/components/common/AIBubbleSkeleton/index.tsx":"7","/Users/chaerimkim/team-f-client/src/components/common/Button/index.tsx":"8","/Users/chaerimkim/team-f-client/src/components/common/Chip/index.tsx":"9","/Users/chaerimkim/team-f-client/src/components/common/GNB/index.tsx":"10","/Users/chaerimkim/team-f-client/src/components/common/Header/index.tsx":"11","/Users/chaerimkim/team-f-client/src/components/common/Icon/icons.ts":"12","/Users/chaerimkim/team-f-client/src/components/common/Icon/index.tsx":"13","/Users/chaerimkim/team-f-client/src/components/common/Icon/svg.d.ts":"14","/Users/chaerimkim/team-f-client/src/components/common/Input/index.tsx":"15","/Users/chaerimkim/team-f-client/src/components/common/Layout/index.tsx":"16","/Users/chaerimkim/team-f-client/src/components/common/Modal/index.tsx":"17","/Users/chaerimkim/team-f-client/src/components/common/Select/Option.tsx":"18","/Users/chaerimkim/team-f-client/src/components/common/Select/index.tsx":"19","/Users/chaerimkim/team-f-client/src/components/common/UserBubble/index.tsx":"20","/Users/chaerimkim/team-f-client/src/components/common/pageMark/index.tsx":"21","/Users/chaerimkim/team-f-client/src/hooks/queries/useAnswerById.ts":"22","/Users/chaerimkim/team-f-client/src/hooks/queries/useDefaultQuestionQuery.ts":"23","/Users/chaerimkim/team-f-client/src/hooks/queries/useMainCategoryQuery.ts":"24","/Users/chaerimkim/team-f-client/src/hooks/queries/useMidCategoryByIdQuery.ts":"25","/Users/chaerimkim/team-f-client/src/hooks/queries/useMidCategoryQuery.ts":"26","/Users/chaerimkim/team-f-client/src/hooks/useCategoryButton.ts":"27","/Users/chaerimkim/team-f-client/src/hooks/useModal.tsx":"28","/Users/chaerimkim/team-f-client/src/hooks/useSelect.ts":"29","/Users/chaerimkim/team-f-client/src/pages/_app.tsx":"30","/Users/chaerimkim/team-f-client/src/pages/index.tsx":"31","/Users/chaerimkim/team-f-client/src/pages/onboarding/[mainCategoryId]/index.tsx":"32","/Users/chaerimkim/team-f-client/src/pages/onboarding/index.tsx":"33","/Users/chaerimkim/team-f-client/src/pages/question/[categoryId]/index.tsx":"34","/Users/chaerimkim/team-f-client/src/store/select/atom.ts":"35","/Users/chaerimkim/team-f-client/src/store/select/index.ts":"36","/Users/chaerimkim/team-f-client/src/types/common.d.ts":"37","/Users/chaerimkim/team-f-client/src/components/Question/Button/index.tsx":"38","/Users/chaerimkim/team-f-client/src/components/Question/QuestionMain.tsx":"39","/Users/chaerimkim/team-f-client/src/components/Question/TailQuestion.tsx":"40","/Users/chaerimkim/team-f-client/src/components/Question/index.tsx":"41","/Users/chaerimkim/team-f-client/src/hooks/queries/useTailQuestionByIdQuery.ts":"42","/Users/chaerimkim/team-f-client/src/store/question/atom.ts":"43","/Users/chaerimkim/team-f-client/src/store/question/index.ts":"44","/Users/chaerimkim/team-f-client/src/next-env.d.ts":"45"},{"size":1844,"mtime":1674933194519,"results":"46","hashOfConfig":"47"},{"size":309,"mtime":1674829801349,"results":"48","hashOfConfig":"47"},{"size":1041,"mtime":1674829801349,"results":"49","hashOfConfig":"47"},{"size":726,"mtime":1674829801349,"results":"50","hashOfConfig":"47"},{"size":613,"mtime":1674829801349,"results":"51","hashOfConfig":"47"},{"size":1486,"mtime":1674900476359,"results":"52","hashOfConfig":"47"},{"size":1604,"mtime":1674900476359,"results":"53","hashOfConfig":"47"},{"size":2205,"mtime":1674927408143,"results":"54","hashOfConfig":"47"},{"size":476,"mtime":1674900476359,"results":"55","hashOfConfig":"47"},{"size":250,"mtime":1674900476360,"results":"56","hashOfConfig":"47"},{"size":1598,"mtime":1674935333972,"results":"57","hashOfConfig":"47"},{"size":781,"mtime":1674917247104,"results":"58","hashOfConfig":"47"},{"size":551,"mtime":1674908200369,"results":"59","hashOfConfig":"47"},{"size":24,"mtime":1674829801350,"results":"60","hashOfConfig":"47"},{"size":1671,"mtime":1674900476361,"results":"61","hashOfConfig":"47"},{"size":521,"mtime":1674927408144,"results":"62","hashOfConfig":"47"},{"size":287,"mtime":1674900476361,"results":"63","hashOfConfig":"47"},{"size":888,"mtime":1674935354388,"results":"64","hashOfConfig":"47"},{"size":309,"mtime":1674900476361,"results":"65","hashOfConfig":"47"},{"size":570,"mtime":1674900476362,"results":"66","hashOfConfig":"47"},{"size":464,"mtime":1674933194520,"results":"67","hashOfConfig":"47"},{"size":329,"mtime":1674927408144,"results":"68","hashOfConfig":"47"},{"size":355,"mtime":1674933194520,"results":"69","hashOfConfig":"47"},{"size":281,"mtime":1674870401609,"results":"70","hashOfConfig":"47"},{"size":380,"mtime":1674927408144,"results":"71","hashOfConfig":"47"},{"size":330,"mtime":1674933194520,"results":"72","hashOfConfig":"47"},{"size":568,"mtime":1674900476363,"results":"73","hashOfConfig":"47"},{"size":1157,"mtime":1674933722908,"results":"74","hashOfConfig":"47"},{"size":535,"mtime":1674870401609,"results":"75","hashOfConfig":"47"},{"size":1271,"mtime":1674933300322,"results":"76","hashOfConfig":"47"},{"size":658,"mtime":1674933840877,"results":"77","hashOfConfig":"47"},{"size":1814,"mtime":1674927408145,"results":"78","hashOfConfig":"47"},{"size":1660,"mtime":1674937322185,"results":"79","hashOfConfig":"47"},{"size":1813,"mtime":1674933194521,"results":"80","hashOfConfig":"47"},{"size":157,"mtime":1674870401610,"results":"81","hashOfConfig":"47"},{"size":73,"mtime":1674870401610,"results":"82","hashOfConfig":"47"},{"size":174,"mtime":1674927408145,"results":"83","hashOfConfig":"47"},{"size":643,"mtime":1674927408143,"results":"84","hashOfConfig":"47"},{"size":72,"mtime":1674927408143,"results":"85","hashOfConfig":"47"},{"size":3565,"mtime":1674933194519,"results":"86","hashOfConfig":"47"},{"size":3948,"mtime":1674933194519,"results":"87","hashOfConfig":"47"},{"size":347,"mtime":1674933194521,"results":"88","hashOfConfig":"47"},{"size":1532,"mtime":1674933194521,"results":"89","hashOfConfig":"47"},{"size":321,"mtime":1674933194521,"results":"90","hashOfConfig":"47"},{"size":201,"mtime":1674928890224,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d86sy9",{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chaerimkim/team-f-client/src/apis/index.ts",[],[],"/Users/chaerimkim/team-f-client/src/components/GlobalErrorFallback.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/QueryClientProvider.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/QueryErrorBoundary.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/RecoilDebugObserver.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/common/AIBubble/index.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/common/AIBubbleSkeleton/index.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/common/Button/index.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/common/Chip/index.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/common/GNB/index.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/common/Header/index.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/common/Icon/icons.ts",[],[],"/Users/chaerimkim/team-f-client/src/components/common/Icon/index.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/common/Icon/svg.d.ts",[],[],"/Users/chaerimkim/team-f-client/src/components/common/Input/index.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/common/Layout/index.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/common/Modal/index.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/common/Select/Option.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/common/Select/index.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/common/UserBubble/index.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/common/pageMark/index.tsx",[],[],"/Users/chaerimkim/team-f-client/src/hooks/queries/useAnswerById.ts",[],[],"/Users/chaerimkim/team-f-client/src/hooks/queries/useDefaultQuestionQuery.ts",[],[],"/Users/chaerimkim/team-f-client/src/hooks/queries/useMainCategoryQuery.ts",[],[],"/Users/chaerimkim/team-f-client/src/hooks/queries/useMidCategoryByIdQuery.ts",[],[],"/Users/chaerimkim/team-f-client/src/hooks/queries/useMidCategoryQuery.ts",[],[],"/Users/chaerimkim/team-f-client/src/hooks/useCategoryButton.ts",[],[],"/Users/chaerimkim/team-f-client/src/hooks/useModal.tsx",[],[],"/Users/chaerimkim/team-f-client/src/hooks/useSelect.ts",[],[],"/Users/chaerimkim/team-f-client/src/pages/_app.tsx",[],[],"/Users/chaerimkim/team-f-client/src/pages/index.tsx",["232","233"],[],"import { Button } from '@/components/common/Button';\nimport { useRouter } from 'next/router';\n\nexport default function Home() {\n  const router = useRouter();\n  const onClick = () => {\n    router.push('/onboarding');\n  };\n  \n  return (\n    <div className=\"w-full flex-col text-center\">\n      <header className=\"pt-[75px] text-h2 text-gray-600\">Service Name</header>\n      <div className=\"text-b1 mt-[12px] text-gray-600\">AI 꼬리질문으로 준비하는 면접</div>\n      <img className=\"mt-[24px] mx-auto w-[328px] h-[328px] bg-gray-100 mb-[24px]\"></img>\n      <Button onClick={onClick} buttonType=\"primary\" buttonText=\"시작하기\" />\n    </div>\n  );\n}\n","/Users/chaerimkim/team-f-client/src/pages/onboarding/[mainCategoryId]/index.tsx",["234"],[],"import { Button } from '@/components/common/Button';\nimport { Icon } from '@/components/common/Icon';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { useMidCategoryQuery } from '@/hooks/queries/useMidCategoryQuery';\nimport { useRouter } from 'next/router';\n\nconst IMAGE_SRC =\n  'https://images.unsplash.com/photo-1661961110671-77b71b929d52?ixlib=rb-4.0.3&ixid=MnwxMjA3fDF8MHxlZGl0b3JpYWwtZmVlZHwxfHx8ZW58MHx8fHw%3D&auto=format&fit=crop&w=800&q=60';\n\nconst Category = () => {\n  const router = useRouter();\n  const { data, isSuccess } = useMidCategoryQuery({ id: router.query.mainCategoryId as string });\n\n  const handleChangeButtonClick = () => {\n    router.back();\n  };\n\n  return (\n    <>\n      <header className=\"flex w-full justify-between py-[2rem]\">\n        <Icon iconName=\"logo\" width={40} height={18} />\n        <Icon iconName=\"setting\" size={24} />\n      </header>\n      <article>\n        <section>\n          <p className=\"text-b1 text-gray-600\">내 희망직무</p>\n          <div className=\"flex justify-between items-center mt-[0.8rem]\">\n            {isSuccess && <p className=\"text-h2 text-gray-800\">{data.name}</p>}\n            <Button onClick={handleChangeButtonClick} buttonText=\"변경\" buttonType=\"extra\" />\n          </div>\n        </section>\n        <section className=\"grid grid-cols-2 gap-[0.8rem] mt-[2rem]\">\n          {data?.categories.map((category, index) => {\n            return (\n              <Link key={index} href={`/question/${category.id}`}>\n                <Image\n                  src={category.imageUrl === '' ? IMAGE_SRC : `${category.imageUrl}`}\n                  width={160}\n                  height={160}\n                />\n              </Link>\n            );\n          })}\n        </section>\n      </article>\n    </>\n  );\n};\n\nexport default Category;\n","/Users/chaerimkim/team-f-client/src/pages/onboarding/index.tsx",["235"],[],"/Users/chaerimkim/team-f-client/src/pages/question/[categoryId]/index.tsx",["236","237"],[],"import { useRecoilValue, useSetRecoilState } from 'recoil';\n\nimport { Header } from '@/components/common/Header';\nimport Question from '@/components/Question';\nimport { useDefaultQuestionQuery } from '@/hooks/queries/useDefaultQuestionQuery';\nimport {\n  questionAtomFamily,\n  questionMarkAtom,\n  questionOrderAtom,\n  tailQuestionIdAtomFamily,\n} from '@/store/question';\nimport { useEffect } from 'react';\nimport { useMidCategoryByIdQuery } from '@/hooks/queries/useMidCategoryByIdQuery';\nimport { useRouter } from 'next/router';\n\nconst QuestionPage = () => {\n  const router = useRouter();\n  const midCategoryId = router?.query?.categoryId;\n  const { data: midCategory, isSuccess: midCategoryIsSuccess } = useMidCategoryByIdQuery(\n    Number(midCategoryId)\n  );\n  const {\n    data: defaultQuestion,\n    isSuccess: defaultQuestionIsSuccess,\n    refetch: defaultQuestionRefetch,\n    isRefetching: defaultQuestionIsRefetching,\n  } = useDefaultQuestionQuery(Number(midCategoryId));\n  const order = useRecoilValue(questionOrderAtom);\n  const mark = useRecoilValue(questionMarkAtom);\n  const setQuestion = useSetRecoilState(questionAtomFamily(order));\n  const setTailQuestionIds = useSetRecoilState(tailQuestionIdAtomFamily(order));\n  useEffect(() => {\n    if (mark === order) defaultQuestionRefetch();\n  }, [order]);\n\n  useEffect(() => {\n    if (defaultQuestionIsSuccess) {\n      setQuestion(prev => ({\n        ...prev,\n        basicQuestion: { id: defaultQuestion.id, question: defaultQuestion.question },\n      }));\n\n      setTailQuestionIds([defaultQuestion.id]);\n    }\n  }, [defaultQuestionIsSuccess, defaultQuestionIsRefetching]);\n\n  return (\n    <div className=\"w-full\">\n      {midCategoryIsSuccess && <Header headerTitle={midCategory.name} />}\n      <Question />\n    </div>\n  );\n};\n\nexport default QuestionPage;\n","/Users/chaerimkim/team-f-client/src/store/select/atom.ts",[],[],"/Users/chaerimkim/team-f-client/src/store/select/index.ts",[],[],"/Users/chaerimkim/team-f-client/src/types/common.d.ts",[],[],"/Users/chaerimkim/team-f-client/src/components/Question/Button/index.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/Question/QuestionMain.tsx",[],[],"/Users/chaerimkim/team-f-client/src/components/Question/TailQuestion.tsx",["238"],[],"import { useAnswerById } from '@/hooks/queries/useAnswerById';\nimport { useTailQuestionById } from '@/hooks/queries/useTailQuestionByIdQuery';\nimport {\n  questionAtomFamily,\n  QuestionAtomFamilyProps,\n  questionMarkAtom,\n  questionOrderAtom,\n  tailQuestionAtomFamily,\n  tailQuestionIdAtomFamily,\n} from '@/store/question/atom';\nimport { ChangeEvent, useEffect } from 'react';\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport { AIBubble } from '../common/AIBubble';\nimport { Button } from '../common/Button';\nimport { Chip } from '../common/Chip';\nimport { GNB } from '../common/GNB';\nimport { Icon } from '../common/Icon';\nimport { Input } from '../common/Input';\nimport { UserBubble } from '../common/UserBubble';\n\nconst TailQuestion = ({ id }: { id: number }) => {\n  const [order, setOrder] = useRecoilState(questionOrderAtom);\n  const [mark, setMark] = useRecoilState(questionMarkAtom);\n  const setQuestion = useSetRecoilState(questionAtomFamily(order));\n  const { data: tailQuestionData, isSuccess: tailQuestionIsSuccess } = useTailQuestionById(id);\n  const [tailQuestion, setTailQuestion] = useRecoilState(\n    tailQuestionAtomFamily(tailQuestionData?.id as number)\n  );\n  const [tailQuestionIds, setTailQuestionIds] = useRecoilState(tailQuestionIdAtomFamily(order));\n  const { data: aiAnswerData, isSuccess: aiAnswerIsSuccess } = useAnswerById(\n    tailQuestionData?.id as number\n  );\n\n  useEffect(() => {\n    if (aiAnswerIsSuccess)\n      setTailQuestion(prev => ({\n        ...prev,\n        aiAnswer: aiAnswerData.answer,\n      }));\n  }, []);\n\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setTailQuestion(prev => ({ ...prev, userAnswer: { isAnswer: false, answer: e.target.value } }));\n  };\n\n  const isUserAnswer = tailQuestion.userAnswer.isAnswer;\n\n  const isDisabled = tailQuestion.userAnswer.answer === '' && !isUserAnswer;\n\n  const handleTailButtonClick = () => {\n    if (tailQuestionIsSuccess) setTailQuestionIds(prev => [...prev, tailQuestionData.id]);\n  };\n\n  const handleNextButtonClick = () => {\n    setOrder(mark + 1);\n    setMark(prev => prev + 1);\n  };\n\n  const handleAnswerButtonClick = () => {\n    setTailQuestion(prev => ({\n      ...prev,\n      userAnswer: { isAnswer: true, answer: prev.userAnswer.answer },\n    }));\n  };\n\n  return (\n    <div className=\"w-full\">\n      {tailQuestionIsSuccess && (\n        <AIBubble\n          key={tailQuestionData?.id}\n          questionChip={<Chip text={'꼬리 질문'} chipType={'answer'} />}\n          question={tailQuestionData.question}\n          answerChip={<Chip text={'AI 답변'} chipType={'default'} />}\n          answer={isUserAnswer ? tailQuestion.aiAnswer : ''}\n        />\n      )}\n      {!isUserAnswer && <Input value={tailQuestion.userAnswer.answer} onChange={handleChange} />}\n      {isUserAnswer && <UserBubble answer={tailQuestion.userAnswer.answer} />}\n      <GNB>\n        {isUserAnswer ? (\n          <div className=\"grid grid-cols-[0.8fr_0.2fr] gap-[1rem]\">\n            <Button onClick={handleTailButtonClick} buttonType=\"primary\" buttonText=\"꼬리 질문\" />\n            <Button\n              onClick={handleNextButtonClick}\n              buttonType=\"sub\"\n              buttonIcon={<Icon iconName=\"rightArrow\" size={24} />}\n            />\n          </div>\n        ) : (\n          <Button\n            onClick={handleAnswerButtonClick}\n            buttonType=\"primary\"\n            buttonText=\"작성 완료\"\n            isDisabled={isDisabled}\n          />\n        )}\n      </GNB>\n    </div>\n  );\n};\n\nexport default TailQuestion;\n","/Users/chaerimkim/team-f-client/src/components/Question/index.tsx",["239"],[],"import { useAnswerById } from '@/hooks/queries/useAnswerById';\nimport {\n  questionAtomFamily,\n  questionMarkAtom,\n  questionOrderAtom,\n  tailQuestionIdAtomFamily,\n} from '@/store/question';\nimport { ChangeEvent, useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { AIBubble } from '../common/AIBubble';\nimport { Button } from '../common/Button';\nimport { Chip } from '../common/Chip';\nimport { GNB } from '../common/GNB';\nimport { Icon } from '../common/Icon';\nimport { Input } from '../common/Input';\nimport { PageMark } from '../common/pageMark';\nimport { UserBubble } from '../common/UserBubble';\nimport TailQuestion from './TailQuestion';\n\nconst Question = () => {\n  const [order, setOrder] = useRecoilState(questionOrderAtom);\n  const [mark, setMark] = useRecoilState(questionMarkAtom);\n  const [question, setQuestion] = useRecoilState(questionAtomFamily(order));\n  const [tailQuestionIds, setTailQuestionIds] = useRecoilState(tailQuestionIdAtomFamily(order));\n  const { data: aiAnswerData, isSuccess: aiAnswerIsSuccess } = useAnswerById(\n    question.basicQuestion.id\n  );\n\n  const isUserAnswer = question.userAnswer.isAnswer;\n\n  const isDisabled = question.userAnswer.answer === '' && !isUserAnswer;\n\n  useEffect(() => {\n    if (aiAnswerIsSuccess)\n      setQuestion(prev => ({\n        ...prev,\n        aiAnswer: aiAnswerData.answer,\n      }));\n  }, [aiAnswerIsSuccess]);\n\n  const handleAnswerInput = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setQuestion(prev => ({\n      ...prev,\n      userAnswer: { isAnswer: prev.userAnswer.isAnswer, answer: e.target.value },\n    }));\n  };\n\n  const handleAnswerButtonClick = () => {\n    setQuestion(prev => ({\n      ...prev,\n      userAnswer: { isAnswer: true, answer: prev.userAnswer.answer },\n    }));\n  };\n\n  const handleTailButtonClick = () => {\n    setQuestion(prev => ({\n      ...prev,\n      isTailQuestion: true,\n    }));\n  };\n\n  const handleNextButtonClick = () => {\n    setOrder(mark + 1);\n    setMark(prev => prev + 1);\n  };\n\n  const handleTailAnswerButtonClick = () => {};\n\n  const handleOrderClick = (index: number) => {\n    setOrder(index + 1);\n  };\n\n  return (\n    <div className=\"h-full pb-[100px]\">\n      <div className=\"h-[64px] flex items-center\">\n        {Array(mark)\n          .fill(0)\n          .map((_, index) => (\n            <div\n              key={index}\n              className=\"first:ml-0 ml-[0.8rem]\"\n              onClick={() => handleOrderClick(index)}\n            >\n              <PageMark pageNumber={index + 1} isActive={order === index + 1} />\n            </div>\n          ))}\n      </div>\n      <AIBubble\n        questionChip={<Chip text={'일반 질문'} chipType={'default'} />}\n        question={question.basicQuestion.question}\n        answerChip={<Chip text={'AI 답변'} chipType={'default'} />}\n        answer={isUserAnswer ? question.aiAnswer : ''}\n      />\n      {!isUserAnswer && <Input value={question.userAnswer.answer} onChange={handleAnswerInput} />}\n      {isUserAnswer && <UserBubble answer={question.userAnswer.answer} />}\n      {question.isTailQuestion &&\n        tailQuestionIds.map((id, index) => <TailQuestion key={index} id={id} />)}\n      {!question.isTailQuestion && (\n        <GNB>\n          {isUserAnswer && !question.isTailQuestion ? (\n            <div className=\"grid grid-cols-[0.8fr_0.2fr] gap-[1rem]\">\n              <Button onClick={handleTailButtonClick} buttonType=\"primary\" buttonText=\"꼬리 질문\" />\n              <Button\n                onClick={handleNextButtonClick}\n                buttonType=\"sub\"\n                buttonIcon={<Icon iconName=\"rightArrow\" size={24} />}\n              />\n            </div>\n          ) : (\n            <Button\n              onClick={handleAnswerButtonClick}\n              buttonType=\"primary\"\n              buttonText=\"작성 완료\"\n              isDisabled={isDisabled}\n            />\n          )}\n        </GNB>\n      )}\n    </div>\n  );\n};\n\nexport default Question;\n","/Users/chaerimkim/team-f-client/src/hooks/queries/useTailQuestionByIdQuery.ts",[],[],"/Users/chaerimkim/team-f-client/src/store/question/atom.ts",[],[],"/Users/chaerimkim/team-f-client/src/store/question/index.ts",[],[],"/Users/chaerimkim/team-f-client/src/next-env.d.ts",[],[],{"ruleId":"240","severity":1,"message":"241","line":14,"column":7,"nodeType":"242","endLine":14,"endColumn":84},{"ruleId":"243","severity":1,"message":"244","line":14,"column":7,"nodeType":"242","endLine":14,"endColumn":84},{"ruleId":"243","severity":1,"message":"245","line":37,"column":17,"nodeType":"242","endLine":41,"endColumn":19},{"ruleId":"246","severity":1,"message":"247","line":35,"column":6,"nodeType":"248","endLine":35,"endColumn":13,"suggestions":"249"},{"ruleId":"246","severity":1,"message":"250","line":34,"column":6,"nodeType":"248","endLine":34,"endColumn":13,"suggestions":"251"},{"ruleId":"246","severity":1,"message":"252","line":45,"column":6,"nodeType":"248","endLine":45,"endColumn":61,"suggestions":"253"},{"ruleId":"246","severity":1,"message":"254","line":40,"column":6,"nodeType":"248","endLine":40,"endColumn":8,"suggestions":"255"},{"ruleId":"246","severity":1,"message":"256","line":39,"column":6,"nodeType":"248","endLine":39,"endColumn":25,"suggestions":"257"},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Use `<Image />` from `next/image` instead to utilize Image Optimization. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'question.basicQuestion.id' and 'router'. Either include them or remove the dependency array.","ArrayExpression",["258"],"React Hook useEffect has missing dependencies: 'defaultQuestionRefetch' and 'mark'. Either include them or remove the dependency array.",["259"],"React Hook useEffect has missing dependencies: 'defaultQuestion.id', 'defaultQuestion.question', 'setQuestion', and 'setTailQuestionIds'. Either include them or remove the dependency array.",["260"],"React Hook useEffect has missing dependencies: 'aiAnswerData.answer', 'aiAnswerIsSuccess', and 'setTailQuestion'. Either include them or remove the dependency array.",["261"],"React Hook useEffect has missing dependencies: 'aiAnswerData.answer' and 'setQuestion'. Either include them or remove the dependency array.",["262"],{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},"Update the dependencies array to be: [order, question.basicQuestion.id, router]",{"range":"273","text":"274"},"Update the dependencies array to be: [defaultQuestionRefetch, mark, order]",{"range":"275","text":"276"},"Update the dependencies array to be: [defaultQuestionIsSuccess, defaultQuestionIsRefetching, setQuestion, setTailQuestionIds, defaultQuestion.id, defaultQuestion.question]",{"range":"277","text":"278"},"Update the dependencies array to be: [aiAnswerData.answer, aiAnswerIsSuccess, setTailQuestion]",{"range":"279","text":"280"},"Update the dependencies array to be: [aiAnswerData.answer, aiAnswerIsSuccess, setQuestion]",{"range":"281","text":"282"},[1213,1220],"[order, question.basicQuestion.id, router]",[1301,1308],"[defaultQuestionRefetch, mark, order]",[1572,1627],"[defaultQuestionIsSuccess, defaultQuestionIsRefetching, setQuestion, setTailQuestionIds, defaultQuestion.id, defaultQuestion.question]",[1578,1580],"[aiAnswerData.answer, aiAnswerIsSuccess, setTailQuestion]",[1379,1398],"[aiAnswerData.answer, aiAnswerIsSuccess, setQuestion]"]